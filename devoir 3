start
  = (firstAction)*
firstAction
   =left:secondAction " " right:pct {return left}

secondAction
   = left:string " = " right:additive { return left+' are valoarea de '+right }

additive
  = left:subtraction "+" right:additive { return left + right; }
  / subtraction

subtraction
  = left:exponential "-" right:subtraction { return left - right; }
  / exponential

exponential
  = left:division "^" right:exponential {return Math.pow(left,right)}
  / division

division 
  = left:multiplicative "/" right:division {return left/right}
  / multiplicative

multiplicative
  = left:primary "*" right:multiplicative { return left * right; }
  / primary

primary
  = integer
  / "(" additive:additive ")" { return additive; }

integer "integer"
  = (digits:[0-9]+) { return parseInt(digits.join(""), 10); }

string "string"
  = variable:([a-zA-Z]+) { return variable.join(""); }

pct
  = final:[$][$]"\n" { return final }
Status API Training Shop Blog About
Â© 2016 GitHub, Inc. Terms Privacy Security Contact Help
